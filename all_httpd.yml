apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpd
  labels:
    app: httpd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: httpd
  template:
    metadata:
      labels:
        app: httpd
    spec:
      containers:
      - name: httpd
        image: httpd:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/local/apache2/htdocs
          name: httpd-data
      volumes:
      - name: httpd-data
        persistentVolumeClaim:
          claimName: httpd-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: httpd
  namespace: devops-tools
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: httpd
  type: NodePort

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: httpd
  namespace: devops-tools
spec:
  ingressClassName: public
  rules:
  - host: httpd.k8s.it
    http:
      paths:
      - backend:
          service:
            name: httpd
            port:
              number: 80
        path: /
        pathType: Prefix
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    type: local
  name: httpd-pv-volume
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 10Gi
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: httpd-pv-claim
    namespace: devops-tools
  local:
    path: /mnt/httpd
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - ubuntu
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: httpd-pv-claim
  namespace: devops-tools
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  volumeMode: Filesystem
  volumeName: httpd-pv-volume
